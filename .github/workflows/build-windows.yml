name: Build Windows Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # 设置 Node.js 环境
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    # 缓存 electron-builder 下载的依赖
    - name: Cache electron-builder dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/electron-builder
          ~/AppData/Local/electron-builder
        key: ${{ runner.os }}-electron-builder-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-electron-builder-
    
    # 安装依赖
    - name: Install dependencies
      run: |
        npm ci
        npm install -g electron-builder
      
    # 构建应用
    - name: Build application
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npm run build
      
    # 验证构建产物
    - name: Verify build artifacts
      run: |
        if (!(Test-Path "dist")) {
          Write-Error "Build failed - dist directory not found"
          exit 1
        }
        $exeFiles = Get-ChildItem -Path "dist" -Recurse -Filter "*.exe"
        if ($exeFiles.Count -eq 0) {
          Write-Error "No .exe files found in dist directory"
          exit 1
        }
        
    # 发布 Release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          dist/**/*.exe
          dist/**/*.msi
        fail_on_unmatched_files: true 